name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때마다 실행
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 코드
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # 3. Build the application with Gradle
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # 4. Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 5. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t flashpay:latest .

      # 6. Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker tag flashpay:latest ${{ secrets.DOCKER_USERNAME }}/flashpay:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/flashpay:latest

      # 7. Deploy to cloud (using SSH)
      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SSH_USERNAME }}@$HOST "docker pull ${{ secrets.DOCKER_USERNAME }}/flashpay:latest && docker-compose -f /path/to/docker-compose.yml up -d"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          HOST: ${{ secrets.HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
